foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()%>%
cut_width(mean.abundance, 10)
bar<-foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()#%>%
cut_width(bar$mean.abundance, 10)
foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()
foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()%>%
mutate(mean.int=mean.abundance %/% 100 +1)
foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()%>%
mutate(mean.int=mean.abundance %/% 100 +1)%>%
arrange(var.abundance,desc(mean.abundance))
foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()%>%
mutate(mean.int=mean.abundance %/% 100 +1)%>%
mutate(var.int=var.abundance %/% 100 +1)%>%
arrange(var.abundance,desc(mean.abundance))
range(bar$var.abundance)
range(bar$mean.abundance)
summary(bar)
foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()%>%
mutate(mean.int=mean.abundance %/% 1000 +1)%>%
mutate(var.int=var.abundance %/% 1000 +1)%>%
arrange(var.abundance,desc(mean.abundance))
foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()%>%
mutate(mean.int=mean.abundance %/% 10000 +1)%>%
mutate(var.int=var.abundance %/% 10000 +1)%>%
arrange(var.abundance,desc(mean.abundance))
foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()%>%
mutate(mean.int=mean.abundance %/% 10000 +1)%>%
mutate(var.int=var.abundance %/% 10000 +1)%>%
arrange(mean.int,desc(var.int))
foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()%>%
mutate(mean.int=mean.abundance %/% 10000 +1)%>%
mutate(var.int=var.abundance %/% 10000 +1)%>%
arrange(var.int,desc(mean.int))
foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()%>%
mutate(mean.int=mean.abundance %/% 1000 +1)%>%
mutate(var.int=var.abundance %/% 10000 +1)%>%
arrange(var.int,desc(mean.int))
foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()%>%
mutate(mean.int=mean.abundance %/% 1000 +1)%>%
mutate(var.int=var.abundance %/% 1000 +1)%>%
arrange(var.int,desc(mean.int))
foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()%>%
mutate(mean.int=mean.abundance %/% 1000 +1)%>%
mutate(var.int=var.abundance %/% 1000 +1)%>%
arrange(desc(mean.int),var.int)
foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()%>%
mutate(mean.int=mean.abundance %/% 1000 +1)%>%
mutate(var.int=var.abundance %/% 1000 +1)%>%
arrange(var.int,desc(mean.int))
foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()%>%
filter(mean.abundance>1000,var.abundance>1000)%>%
mutate(mean.int=mean.abundance %/% 1000 +1)%>%
mutate(var.int=var.abundance %/% 1000 +1)%>%
arrange(var.int,desc(mean.int))
foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()%>%
filter(mean.abundance>1000,var.abundance>100)%>%
mutate(mean.int=mean.abundance %/% 1000 +1)%>%
mutate(var.int=var.abundance %/% 1000 +1)%>%
arrange(var.int,desc(mean.int))
foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()%>%
filter(mean.abundance>1000,var.abundance>100)%>%
mutate(mean.int=mean.abundance %/% 1000 +1)%>%
mutate(var.int=var.abundance %/% 1000 +1)%>%
arrange(desc(mean.int))
foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()%>%
filter(mean.abundance>1000,var.abundance>100)%>%
mutate(mean.int=mean.abundance %/% 1000 +1)%>%
mutate(var.int=var.abundance %/% 1000 +1)%>%
arrange(desc(mean.int),var.int)
foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()%>%
filter(mean.abundance>1000,var.abundance>100)%>%
mutate(mean.int=mean.abundance %/% 1000 +1)%>%
mutate(var.int=var.abundance %/% 1000 +1)%>%
arrange(desc(mean.int),var.int)%>%View()
View(foo)
foo%>%
# column_to_rownames("function")%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
group_by(predicted.function)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(predicted.function,mean.abundance,var.abundance)%>%
distinct()%>%
# filter(mean.abundance>1000,var.abundance>100)%>%
mutate(mean.int=mean.abundance %/% 1000 +1)%>%
mutate(var.int=var.abundance %/% 1000 +1)%>%
arrange(desc(mean.int),var.int)%>%View()
View(ko_abundance)
barplot(ko_abundance[ko_abundance$predicted.function=="K03088",-1])
ko_abundance[ko_abundance$predicted.function=="K03088",-1]
plot(ko_abundance[ko_abundance$predicted.function=="K03088",-1])
foo%>%
filter(predicted.function=="K03088")
foo%>%
filter(predicted.function=="K03088")%>%
select(-predicted.function)
foo%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
filter(predicted.function=="K03088")%>%
select(-predicted.function)
foo%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
filter(predicted.function=="K03088")%>%
select(-predicted.function)%>%
ggplot(aes(x=Sample,y=abundance))+
geom_bar()
foo%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
filter(predicted.function=="K03088")%>%
select(-predicted.function)%>%
ggplot(aes(y=abundance))+
geom_bar()
foo%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
filter(predicted.function=="K03088")%>%
select(-predicted.function)%>%
ggplot(aes(Sample,abundance))+
geom_bar()
foo%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
filter(predicted.function=="K03088")%>%
select(-predicted.function)%>%
ggplot(aes(x=Sample,y=abundance))+
geom_bar()
foo%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
filter(predicted.function=="K03088")%>%
select(-predicted.function)%>%
ggplot(aes(x=Sample))+
geom_bar()
foo%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
filter(predicted.function=="K03088")%>%
select(-predicted.function)%>%
ggplot(aes(x=Sample))+
geom_line()
foo%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
filter(predicted.function=="K03088")%>%
select(-predicted.function)%>%
ggplot(aes(x=Sample,y=abundance))+
geom_line()
foo%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
filter(predicted.function=="K03088")%>%
select(-predicted.function)%>%
ggplot(aes(Sample,y=abundance))+
geom_line()
foo%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
filter(predicted.function=="K03088")%>%
select(-predicted.function)%>%
ggplot(aes(x=Sample,y=abundance))+
geom_col()
foo%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
# filter(predicted.function=="K03088")%>%
select(-predicted.function)%>%
ggplot(aes(x=Sample,y=abundance))+
geom_col()
foo%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
# filter(predicted.function=="K03088")%>%
select(-predicted.function)%>%
ggplot(aes(x=Sample,y=abundance))+
geom_boxplot()
foo%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
# filter(predicted.function=="K03088")%>%
select(-predicted.function)%>%
filter(abundance<2*10e6)
foo%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
# filter(predicted.function=="K03088")%>%
select(-predicted.function)%>%
filter(abundance<2*10e6)%>%
ggplot(aes(x=Sample,y=abundance))+
geom_boxplot()
2*10+e6
2000000
foo%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
# filter(predicted.function=="K03088")%>%
select(-predicted.function)%>%
filter(abundance<2e+06)%>%
ggplot(aes(x=Sample,y=abundance))+
geom_boxplot()
foo%>%
pivot_longer(!predicted.function,names_to = "Sample",values_to = "abundance")%>%
# filter(predicted.function=="K03088")%>%
select(-predicted.function)%>%
filter(abundance<1e+06)%>%
ggplot(aes(x=Sample,y=abundance))+
geom_boxplot()
metacyc_abundance<-read.table("./data/alldir-data/picrust/supercomp/NMR_FD/path_abun_unstrat.tsv",
header = T,sep="\t")
colnames(metacyc_abundance)<-gsub("X2D10", "2D10",colnames(metacyc_abundance))
colnames(metacyc_abundance)<-gsub("X2D14", "2D14",colnames(metacyc_abundance))
View(metacyc_abundance)
metacyc.foo<-metacyc_abundance[rowSums(metacyc_abundance[,-1] == 0) <= 3, ]
metacyc.foo
metacyc.foo%>%
# column_to_rownames("function")%>%
pivot_longer(!pathway,names_to = "Sample",values_to = "abundance")
metacyc.foo%>%
# column_to_rownames("function")%>%
pivot_longer(!pathway,names_to = "Sample",values_to = "abundance")%>%
group_by(pathway)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))
metacyc.foo%>%
# column_to_rownames("function")%>%
pivot_longer(!pathway,names_to = "Sample",values_to = "abundance")%>%
group_by(pathway)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))
metacyc.foo%>%
# column_to_rownames("function")%>%
pivot_longer(!pathway,names_to = "Sample",values_to = "abundance")%>%
group_by(pathway)%>%
mutate(abundance=as.numeric(abundance))%>%
mutate(mean.abundance=mean(abundance))%>%
mutate(var.abundance=var(abundance))%>%
select(pathway,mean.abundance,var.abundance)%>%
distinct()%>%
# filter(mean.abundance>1000,var.abundance>100)%>%
mutate(mean.int=mean.abundance %/% 1000 +1)%>%
mutate(var.int=var.abundance %/% 1000 +1)%>%
arrange(desc(mean.int),var.int)%>%View()
metacyc.foo%>%
pivot_longer(!pathway,names_to = "Sample",values_to = "abundance")%>%
# filter(predicted.function=="K03088")%>%
select(-pathway)%>%
ggplot(aes(x=Sample,y=abundance))+
geom_boxplot()
# Load MetaCyc pathway abundance and metadata
metadata <- read.table(paste0("./data/alldir-data/","filenames-single-pooled-raw-supercomp.tsv"),
header = T)
metadata<-metadata%>%
filter(class=="NMR"|class=="FukomysDamarensis")
ko_abundance %>%column_to_rownames(predicted.function)
ko_abundance %>%column_to_rownames("predicted.function")
BiocManager::install("biomaRt")
library(biomaRt)
mart <- useMart("ensembl")
listMarts()
listDatasets(mart)
View(listDatasets(mart))
mart <- useDataset("hgfemale_gene_ensembl", mart)
enzymes <- getBM(attributes = c("ec_number", "description"),
filters = "ec_number",
values = "3.2.1%",
mart = mart)
listAttributes()
listAttributes(mart)
listAttributes(mart)%>%View()
View(ko_abundance)
enzymes <- getBM(attributes = c("ec_number", "description"),
filters = "ec_number",
values = "EC:1.1.1.1",
mart = mart)
enzymes <-  getBM(attributes = c("external_gene_name", "description"),
filters = "ec_number",
values = "3.2.1%",
mart = mart)
listAttributes(mart)%>%View()
enzymes <-  getBM(attributes = c("external_gene_name", "description"), filters = "go_term", values = "GO:0005975", mart = mart)
enzymes <-  getBM(attributes = c("external_gene_name", "description"), filters = "go_id", values = "GO:0005975", mart = mart)
enzymes <-  getBM(attributes = c("go_id", "description"),
values = "GO:0005975", mart = mart)
View(enzymes)
# Load MetaCyc pathway abundance and metadata
metadata <- read.table(paste0("./data/alldir-data/","filenames-single-pooled-raw-supercomp.tsv"),
header = T)
metadata<-metadata%>%
filter(class=="NMR"|class=="FukomysDamarensis")
metacyc_abundance<-read.table("./data/alldir-data/picrust/supercomp/NMR_FD/path_abun_unstrat.tsv",
header = T,sep="\t")
colnames(metacyc_abundance)<-gsub("X2D10", "2D10",colnames(metacyc_abundance))
colnames(metacyc_abundance)<-gsub("X2D14", "2D14",colnames(metacyc_abundance))
# Perform pathway DAA using LinDA method
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
metacyc_daa_results_df <- pathway_daa(abundance = metacyc_abundance %>% column_to_rownames("pathway"),
metadata = metadata,
group = "class",
daa_method = "LinDA")
library(ggpicrust2)
library(readr)
library(ggpicrust2)
library(tibble)
library(tidyverse)
library(ggprism)
library(patchwork)
# Perform pathway DAA using LinDA method
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
metacyc_daa_results_df <- pathway_daa(abundance = metacyc_abundance %>% column_to_rownames("pathway"),
metadata = metadata,
group = "class",
daa_method = "LinDA")
View(metacyc_daa_results_df)
# Annotate MetaCyc pathway results without KO to KEGG conversion
metacyc_daa_annotated_results_df <- pathway_annotation(pathway = "MetaCyc",
daa_results_df = metacyc_daa_results_df,
ko_to_kegg = FALSE)
View(metacyc_daa_annotated_results_df)
metacyc_daa_annotated_results_df<-metacyc_daa_annotated_results_df%>%
filter(p_adjust<0.05)%>%
slice(1:25)
# Generate pathway error bar plot
# Please change column_to_rownames() to the feature column
# Please change Group to metadata$your_group_column if you are not using example dataset
pathway_errorbar(abundance = metacyc_abundance %>% column_to_rownames("pathway"),
daa_results_df = metacyc_daa_annotated_results_df,
Group = metadata$class,
ko_to_kegg = FALSE,
p_values_threshold = 0.05,
order = "group",
select = NULL,
p_value_bar = TRUE,
colors = NULL,
x_lab = "description")
# Generate pathway heatmap
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
feature_with_p_0.05 <- metacyc_daa_results_df %>% filter(p_adjust < 0.05)
pathway_heatmap(abundance = metacyc_abundance %>%
filter(pathway %in% feature_with_p_0.05$feature) %>%
column_to_rownames("pathway"),
metadata = metadata,
group = "class")
library(ggh4x)
pathway_heatmap(abundance = metacyc_abundance %>%
filter(pathway %in% feature_with_p_0.05$feature) %>%
column_to_rownames("pathway"),
metadata = metadata,
group = "class")
# Generate pathway error bar plot
# Please change column_to_rownames() to the feature column
# Please change Group to metadata$your_group_column if you are not using example dataset
pathway_errorbar(abundance = metacyc_abundance %>% column_to_rownames("pathway"),
daa_results_df = metacyc_daa_annotated_results_df,
Group = metadata$class,
ko_to_kegg = FALSE,
p_values_threshold = 0.05,
order = "group",
select = NULL,
p_value_bar = TRUE,
colors = NULL,
x_lab = "description")
# Generate pathway PCA plot
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
pathway_pca(abundance = metacyc_abundance %>%
column_to_rownames("pathway"),
metadata = metadata,
group = "class")
